local kap = import 'lib/kapitan.libjsonnet';
local kube = import 'lib/kube.libjsonnet';
local inv = kap.inventory();
local params = inv.parameters.system_upgrade_controller;
{
  Plan(name, channel, label_selectors, concurrency, tolerations, image, push_gateway, command, args): kube._Object('upgrade.cattle.io/v1', 'Plan', name) {
    metadata+: {
      namespace: params.namespace,
      annotations+: {
        'argocd.argoproj.io/sync-options': 'SkipDryRunOnMissingResource=true',
      },
      labels+: {
        'app.kubernetes.io/managed-by': 'syn',
      },
    },
    spec: {
      concurrency: concurrency,
      nodeSelector: {
        matchExpressions: label_selectors,
      },
      serviceAccountName: 'system-upgrade',
      tolerations: tolerations,
      drain: {
        force: true,
      },
      channel: channel,
      upgrade: {
        image: image,
        command: [ command ],
        args: std.prune(args + [ push_gateway ]),
      },
    },
  },
}
